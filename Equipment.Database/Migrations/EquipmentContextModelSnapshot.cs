// <auto-generated />
using System;
using Equipment.Database.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Equipment.Database.Migrations
{
    [DbContext(typeof(EquipmentContext))]
    partial class EquipmentContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.3")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Equipment.Database.Entities.Location", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CodeName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Locations");
                });

            modelBuilder.Entity("Equipment.Database.Entities.MainEquipment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("InvNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("LocationId")
                        .HasColumnType("int");

                    b.Property<int?>("MainEquipmentTypeId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NetworkName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OperationSystem")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Owner")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SerialNo")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("LocationId");

                    b.HasIndex("MainEquipmentTypeId");

                    b.ToTable("MainEquipments");
                });

            modelBuilder.Entity("Equipment.Database.Entities.MainEquipmentType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("MainEquipmentTypes");
                });

            modelBuilder.Entity("Equipment.Database.Entities.SubEquipment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("MainEquipmentId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SerialNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("SubEquipmentTypeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("MainEquipmentId");

                    b.HasIndex("SubEquipmentTypeId");

                    b.ToTable("SubEquipments");
                });

            modelBuilder.Entity("Equipment.Database.Entities.SubEquipmentType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("SubEquipmentTypes");
                });

            modelBuilder.Entity("Equipment.Database.Entities.MainEquipment", b =>
                {
                    b.HasOne("Equipment.Database.Entities.Location", "Location")
                        .WithMany("Equipments")
                        .HasForeignKey("LocationId");

                    b.HasOne("Equipment.Database.Entities.MainEquipmentType", "MainEquipmentType")
                        .WithMany("MainEquipments")
                        .HasForeignKey("MainEquipmentTypeId");

                    b.Navigation("Location");

                    b.Navigation("MainEquipmentType");
                });

            modelBuilder.Entity("Equipment.Database.Entities.SubEquipment", b =>
                {
                    b.HasOne("Equipment.Database.Entities.MainEquipment", "MainEquipment")
                        .WithMany("SubEquipments")
                        .HasForeignKey("MainEquipmentId");

                    b.HasOne("Equipment.Database.Entities.SubEquipmentType", "SubEquipmentType")
                        .WithMany()
                        .HasForeignKey("SubEquipmentTypeId");

                    b.Navigation("MainEquipment");

                    b.Navigation("SubEquipmentType");
                });

            modelBuilder.Entity("Equipment.Database.Entities.Location", b =>
                {
                    b.Navigation("Equipments");
                });

            modelBuilder.Entity("Equipment.Database.Entities.MainEquipment", b =>
                {
                    b.Navigation("SubEquipments");
                });

            modelBuilder.Entity("Equipment.Database.Entities.MainEquipmentType", b =>
                {
                    b.Navigation("MainEquipments");
                });
#pragma warning restore 612, 618
        }
    }
}
