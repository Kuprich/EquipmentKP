// <auto-generated />
using System;
using Equipment.Database.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Equipment.Database.Migrations
{
    [DbContext(typeof(EquipContext))]
    [Migration("20210222155244_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.3")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Equipment.Database.Entities.Equip", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("EquipTypeId")
                        .HasColumnType("int");

                    b.Property<string>("InvNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("LocationId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NetworkName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OperationSystem")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Owner")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SerialNo")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("EquipTypeId");

                    b.HasIndex("LocationId");

                    b.ToTable("Equips");
                });

            modelBuilder.Entity("Equipment.Database.Entities.EquipSubType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("EquipSubTypes");
                });

            modelBuilder.Entity("Equipment.Database.Entities.EquipType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("EquipSubTypeId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("EquipSubTypeId");

                    b.ToTable("EquipTypes");
                });

            modelBuilder.Entity("Equipment.Database.Entities.Location", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CodeName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Organization")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Locations");
                });

            modelBuilder.Entity("Equipment.Database.Entities.Equip", b =>
                {
                    b.HasOne("Equipment.Database.Entities.EquipType", "EquipType")
                        .WithMany("Equips")
                        .HasForeignKey("EquipTypeId");

                    b.HasOne("Equipment.Database.Entities.Location", "Location")
                        .WithMany("Equips")
                        .HasForeignKey("LocationId");

                    b.Navigation("EquipType");

                    b.Navigation("Location");
                });

            modelBuilder.Entity("Equipment.Database.Entities.EquipType", b =>
                {
                    b.HasOne("Equipment.Database.Entities.EquipSubType", null)
                        .WithMany("EquipTypes")
                        .HasForeignKey("EquipSubTypeId");
                });

            modelBuilder.Entity("Equipment.Database.Entities.EquipSubType", b =>
                {
                    b.Navigation("EquipTypes");
                });

            modelBuilder.Entity("Equipment.Database.Entities.EquipType", b =>
                {
                    b.Navigation("Equips");
                });

            modelBuilder.Entity("Equipment.Database.Entities.Location", b =>
                {
                    b.Navigation("Equips");
                });
#pragma warning restore 612, 618
        }
    }
}
